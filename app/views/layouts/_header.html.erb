<style type="text/css">

	span#span_for_help_info:hover{

		border: 1px solid #00acc1;


	}

	.yenye-iko-na-links-za-header{
		position:relative;
		height: 100% !important;
	}
	


</style>


<div class="container-fluid div_holding_header">

	<div class="row">

		<header>

			
			
			<div class="col-md-4" style="position:relative;height:100%;">
				<!-- using a span makes the Care part of the word have a different color. Remember this is one word but we use the span to apply style color to part of the word because unlike block elements, in line elements do not start on new line and only continue where they left off  -->
				<!-- we make the logo a link in itself so when clicked it goes to landing page -->
				<a href="/">
					<h1 style="float:left; font-weight:bold ; " ><span style="color: #4c4c4c ;">Pet</span><span style="color:#00acc1;">Care</span></h1>
				</a>
			</div>

			<!-- ___________________________________________ -->
			<!-- |               ____       ____ ____ ____ | -->
			<!-- |               |__|       |__| |__| |__| | -->
			<!-- |_________________________________________| -->
			<!-- we want the middle button to be find a sitter -->
			<!-- why we do this is to avoid congestion of all links on one corner- use real estate provided -->

			<div class="col-md-2" style="position:relative;height:100%;" >

				<!-- so if the person is a petowner or a visitor a link will be displayed in this column , if the person is a petsitter then this column will exist only not populated with anything -->
				<% unless session.key?(:petsitter) %>
					<!-- remember we want this FIND A SITTER link button to only come when you're logged in as a petowner or when as a visitor-->
					
					<!-- i made this table so that it can be the height of the div row and allow us to vertically center the find a sitter button. -->
					<table class="yenye-iko-na-links-za-header">
						<tr>
							<td>

								<%= link_to  search_main_page_path ,  :method => :get   do  %>

									<button type="button" class="btn btn-default navbar-btn border-highlight yenye-iko-na-links-za-header">Find a sitter</button>
									
								<% end %>


							</td>
						</tr>
						
					</table>
						
					
				<% end %>

			</div>
			
			<div class="col-md-4 col-md-offset-2" style="position:relative;height:100%;" >
				


				<!-- this if statement allows for even spacing of the stuff in the header when either no one is signed in or when s/one is signed - we want buttons for sign in and sign up to be close together if no one is signed -->
				
				<% if session.key?(:petsitter) || session.key?(:petowner) || session.key?(:admin) %>
				<table  class="yenye-iko-na-links-za-header">
				<% else %>
				<table style="float:right; width: 65% ;" class="yenye-iko-na-links-za-header">
				<% end %>
				
					<tr>

						<!-- even if session DOESN'T have keys petsitter or petowner , the session hash still exists and has keys ["session_id", "_csrf_token"] - IMPORTANT TO NOTE THAT  -->

						<% if session.key?(:petsitter) %>

							<!-- we already have a table with a row  -->

							<!-- so i want that cell to look like so -->
							<!-- _____________ -->
							<!-- |_______|____| -->
							<!-- therefore it is like another table within the cell with one row and two cell(tds) -->

							<td>


								<table>

									<tr>

										<td class="notification_icon_header">

											<%= link_to pet_sitter_dashboard_path(current_petsitter.id) , :method => :get do   %>

												<div class="btn btn-default navbar-btn name_section_log_in"  >
													<i class="fa fa-user" style="color: #D3D3D3 ; " ></i>

													<!-- we never want to run queries inside views, they should just display data given to them. views shouldn't even know of existence of models -->
													<!-- Petsitter.find( session[:petsitter] ).first_name.downcase in ruby -->
													<!-- so we could just do the above and it would work but it isn't where that code should be -->
													<!-- current_petsitter is a helper method -->
													<!-- because we might want to call this from other views we put it in global application helper because methods placed here are available to all views  -->


													<!-- we can make this name a link to dashboard -->
													

														<%= current_petsitter.first_name.downcase %>

													
													
												</div>

											<% end %>


										</td>

										<!-- this column allows spacing between the name of petsitter and notification of petsitter -->
										<td style="width:5px;">

										</td>


										<!-- this column shows notification icon and number of notifications(unread of course) -->
										<td class="notification_icon_header">

											<%= link_to pet_sitter_dashboard_notification_path(current_petsitter.id) do %>

												<i class="fa fa-bell " aria-hidden="true" style="color: #D3D3D3 ; "></i>

												(
												<% if current_petsitter.notificationforpetsitters.where('read_status = ? ' , false ).present? %>

													<span style="font-weight:bolder ; color:#ff6666  ;">

														<%= current_petsitter.notificationforpetsitters.where('read_status = ? ' , false ).count %>

													</span>

													
												<% else %>
													<span style="color:#5cb85c;">
														0
													</span>
												<% end %>
												)

											<% end %>
										</td>

										<!-- this column allows spacing between the notifications of petsitter and sign out button -->
										<td style="width:5px;">

										</td>

										<!-- this is the actual sign out button remember can only appear if there is someone currently signed in -->
										<td>

											<%= link_to  session_path ,  :method => :delete  do  %>

												<button type="button" class="btn btn-default navbar-btn border-highlight">Sign Out</button>

											<% end %>

										</td>

									</tr>



								</table>

							</td>



						<% elsif session.key?(:petowner) %>

							<td>

								
								<table>
									<tr>

										<td class="notification_icon_header">

											<!-- we can make this name and icon a link to dashboard -->

											<%= link_to pet_owner_dashboard_path(current_petowner.id) , :method => :get do   %>
							
												<div class="btn btn-default navbar-btn name_section_log_in" >

													<i class="fa fa-user" style="color: #D3D3D3 ; "></i>

													<!-- Petowner.find( session[:petowner] ).first_name.downcase  --> 
													<!-- the statement above could work just fine -->
													<!-- but we never want to run queries inside views, they should just display data given to them. views shouldn't even know of existence of models  -->

														<%= current_petowner.first_name.downcase %>

												</div>

											<% end %>
								

										</td>

										
										


										<!-- this column shows notification icon and number of notifications(unread of course) -->
										<td class="notification_icon_header">

											<%= link_to pet_owner_dashboard_notification_path(current_petowner.id) do %>

												<i class="fa fa-bell " aria-hidden="true" style="color: #D3D3D3 ; "></i>

												(
												<% if current_petowner.notificationforpetowners.where('read_status = ? ' , false ).present? %>

													<span style="font-weight:bolder ; color:#ff6666  ;">

														<%= current_petowner.notificationforpetowners.where('read_status = ? ' , false ).count %>

													</span>

													
													<% else %>
														<span style="color:#5cb85c;">
															0
														</span>
													<% end %>
													)

												<% end %>
											</td>

											<!-- this column allows spacing between the notifications of petowner and sign out button -->
											<td style="width:8px;">

											</td>
											




										<!-- this is the actual sign out button remember can only appear if there is someone currently signed in -->
										<td>
											<!-- ACTUALLY NAME FOR ROUTE HELPER FOR DELETING SESSION DOESN'T EXIST BUT IT IS session_path just with a different HTTP verb - delete -->
											<%= link_to  session_path ,  :method => :delete  do  %>

												<button type="button" class="btn btn-default navbar-btn border-highlight">Sign Out</button>
												
											<% end %>

										</td>


									</tr>

								</table>

							</td>

							
						<% elsif session.key?(:admin) %>

							<td>

								
								<table>
									<tr>

										<td class="notification_icon_header">

											<!-- we can make this name and icon a link to dashboard -->

											<%= link_to admin_dashboard_path(current_admin.id) , :method => :get do   %>
							
												<div class="btn btn-default navbar-btn name_section_log_in" >

													<i class="fa fa-user" style="color: #D3D3D3 ; "></i>

													<!-- Petowner.find( session[:petowner] ).first_name.downcase  --> 
													<!-- the statement above could work just fine -->
													<!-- but we never want to run queries inside views, they should just display data given to them. views shouldn't even know of existence of models  -->

														<%= current_admin.first_name.downcase %>

												</div>

											<% end %>
								

										</td>


										<!-- this column allows spacing between the notifications of petowner and sign out button -->
										<td style="width:8px;">

										</td>
										


										<!-- this is the actual sign out button remember can only appear if there is someone currently signed in -->
										<td>
											<!-- ACTUALLY NAME FOR ROUTE HELPER FOR DELETING SESSION DOESN'T EXIST BUT IT IS session_path just with a different HTTP verb - delete -->
											<%= link_to  session_path ,  :method => :delete  do  %>

												<button type="button" class="btn btn-default navbar-btn border-highlight">Sign Out</button>
												
											<% end %>

										</td>


									</tr>

								</table>

							</td>




						<% else %>

							
							<!-- login button -->
							<td>
								<%= link_to new_session_path , :method => :get do   %>
									<button type="button" class="btn btn-default navbar-btn border-highlight">Sign in</button>
								<% end %>
							</td>
							<!-- ~~~~~~~~~~~~~ -->

							<!-- this column allows spacing between the two buttons(sign up and sign in) -->
							<td style="width:5px;">

							</td>


							<!-- sign up button -->
							<td>
								<%= link_to  page_for_choosing_type_of_registration_path ,  :method => :get  do  %> 
									<button type="button" class="btn btn-default navbar-btn border-highlight">Sign Up</button>
								<% end %>
							</td>
							<!-- ~~~~~~~~~~~~~~~ -->

							<!-- help link -->
							<td>

							</td>
							<!-- ~~~~~~~~~~ -->

						<% end %>

						<td >


							<%= link_to help_info_path do %>

								<span class="btn  navbar-btn" style="color: #00acc1  !important ;" id="span_for_help_info">

									<i class="fa fa-question-circle " aria-hidden="true"></i>
									Help

								</span>
	
							<% end %>
							

						</td>

					</tr>

				</table>

			</div>

		</header>


	</div>
	

</div>



			


	



