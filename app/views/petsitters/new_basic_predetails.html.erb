<div class="container">
	<!-- create first empty row in our grid/graph system of bootstrap -->
	<div class="row" style="height:50px;">

	</div>

	<div class="row" >
		<center>
			<h4>
				<strong>
					Pet Sitter
				</strong>
			</h4>
		</center>
	</div>

	<!-- create 2nd row in our grid system to hold the step we are in -->
	<div class="row">
		<h5 class="text-center"> 
			<strong> Step 1 </strong>
			<br/>
			Basic required details 
		</h5>
	</div>

	<!-- 3 COLUMN LAYOUT -->
	<!-- Create one deep row that has 3 columns in a ratio 3:6:3/1:2:1 -->
	<div class="row">
		<div class="col-md-3">
			<!-- first column -->
		</div>

		<!-- main column with our form -->
		<div class="col-md-6">

			
			<!-- form_for rails helper requires an object to bind to, therefore we give it the empty object @petowner THEN which is of more importance, if we don't specify a url where the form data will be sent, Rails will see whether the record is new or being updated and come up with its own url. Therefore in this case we try and avoid this by specifying -->
			<%= form_for( @petsitter , :url => { controller: 'petsitters' , action: 'create_basic_predetails' } ) do |f| %>

				<!-- we dont want in our form_errors partial to put a specific object like @petowner or @petsitter. instead we want to put a variable and that variable gets filled in with whatever is sent. so in our case we put user variable in actual partial then for this page of petownersnew1ststepform we pass @petowner to replace every occurrence of user or the @petowner gets placed in user variable -->
				<%= render partial: '/all_other_partials/form_errors' , :locals => { user: @petsitter } %>

				<div class="panel panel-default border_style">
						<div class="panel-body">

						<%= render partial: '/all_other_partials/form_partial_for_new_basic_predetails_first_step' , :locals => { :f => f } %>

					</div>
				</div>
				
			<% end %>
				

		</div>

		<div class="col-md-3">
			<!-- third column of our huge long row has nothing yet -->
		</div>


	</div>







</div>
