
<div class="container">
	<!-- create first empty row in our grid/graph system of bootstrap -->
	<div class="row" style="height:50px;">

	</div>

	<div class="row" >
		<center>
			<h5>
				<strong>
					Pet Sitter
				</strong>
			</h5>
		</center>
	</div>

	<!-- create 2nd row in our grid system to hold the step we are in -->
	<div class="row">
		<h5 class="text-center"> 

			<strong> Step 5 </strong>
			<br/>
			Calendar and charges 

		</h5>
	</div>

	
	


	<!-- 3 COLUMN LAYOUT -->
	<!-- Create one deep row that has 3 columns in a ratio 3:6:3/1:2:1 -->
	<div class="row">
		<div class="col-md-3">
			<!-- first column -->
		</div>

		<!-- main column with our form -->
		<div class="col-md-6">


			<div class="panel panel-default border_style">
  				<div class="panel-body">

					<!-- form_for rails helper requires an object to bind to, therefore we give it the empty object @petowner THEN which is of more importance, if we don't specify a url where the form data will be sent, Rails will see whether the record is new or being updated and come up with its own url. Therefore in this case we try and avoid this by specifying -->



					<%= form_for( @petsitter , :url => { controller: 'petsitters' , action: 'update_petsitter_charges_plus_calendar' } ) do |f| %>

						<div class="form-group">

							<label class="form-label"> Unavailable Days: </label>
							<input type="text" name="unavailabledates" id="datespicked" class="form-control" placeholder="Click dates on the calendar to mark or unmark the days you might be unavailable" name="unavailabledates" autofocus />

						</div>

						<div class="form-group">

							<%= f.label :night_charges , "Night charges" %>
							</br>

							<input style="width:100%" id="ex1" name="night_charges"  data-slider-id='ex1Slider' type="number" data-slider-min="150" data-slider-max="1000" data-slider-step="1" data-slider-value="14"/>

						</div>


						<!-- 1) firstly within this middle column, i create a row that spans the width of this column and in this row i create again 3 columns with same ratio 3:6:3 this is called nesting of columns within columns (a row even if it is nested within a column can have a maximum of 2 columns.) -->
						<!-- again we use spans because there are in line elements which means they don't have to start on new line of parent element but they can start anywhere and that is how we can have both Back and Continue buttons on same line -->

						<div class="row">

							<div class="col-md-6 col-sm-offset-3">
								<span style="float:right;">
									<%= f.button :submit, class:"btn btn-success" do %>  Save and Continue  <span class="glyphicon glyphicon-hand-right"></span> 
									<% end %>
								</span>
								<!-- we write out Next then &ensp; is a character that yields a wide space in html - it is a HTML special symbol, then we use greater than symbol(>) to show next  -->

								<span style="float:left;">
									<%= link_to  edit_petsitter_home_details_path(@petsitter.id) ,  :method => :get ,class:"btn btn-success" do  %> 
										<span class="glyphicon glyphicon-hand-left" ></span> Back 
									<% end %>
								</span> 

							</div>
						</div>


					<% end %>

				</div>
			</div>

		</div>

		<div class="col-md-3">
			<!-- third column of our huge long row has nothing yet -->
		</div>


	</div>


</div>





<!-- js -->



<script type="text/javascript">

	// this first line looks through the DOM for an element that matches the selector given and applies the multiDatesPicker which presents a calendar to choose dates from

	$("#datespicked").multiDatesPicker({

		// As with the jQuery Datespicker, you can define a minimum and maximum date from where to pick dates from.
		// The values are relative to the current date.
		// so minimum value to pick dates from is current valie of today therefore the value is 0 from today
		minDate: 0 ,
		dateFormat: "yy-mm-dd" //this is customizing the date format because the default format is mm-dd-yyyy which is a deprecated format in ruby that doesn't work well with to_date function
	});


	// USE THE SEYRIA BOOTSTRAP SLIDER PROVIDED AS AN API 

	// this helps make a textfield a range slider for better usability
	// ive used a gem instead of actually including the files of bootstrap slider - a gem is like a library of functions in ruby(it's some functionality that you'll install to fill a specific need) - check gem file
	$('#ex1').bootstrapSlider({
		formatter: function(value) {
			return value;
		}
	});




</script>