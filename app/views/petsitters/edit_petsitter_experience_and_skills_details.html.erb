
<!-- all bootstrap elements should exist under/inside a class container -->

<div class="container">
	<!-- create first empty row in our grid/graph system of bootstrap -->
	<div class="row" style="height:50px;">

	</div>

	<div class="row" >
		<center>
			<h4>
				<strong>
					Pet Sitter
				</strong>
			</h4>
		</center>
	</div>

	<!-- create 2nd row in our grid system to hold the step we are in -->
	<div class="row">
		<h5 class="text-center"> 
			<strong> Step 3</strong>
			<br/>
			Experience and Skills 
		</h5>
	</div>

	<!-- 3 COLUMN LAYOUT -->
	<!-- Create one deep row that has 3 columns in a ratio 3:6:3/1:2:1 -->
	<div class="row">
		<div class="col-md-3">
			<!-- first column -->
		</div>

		<!-- main column with our form -->
		<div class="col-md-6">


			<div class="panel panel-default border_style">
  				<div class="panel-body">

					<!-- form_for rails helper requires an object to bind to, therefore we give it the empty object @petowner THEN which is of more importance, if we don't specify a url where the form data will be sent, Rails will see whether the record is new or being updated and come up with its own url. Therefore in this case we try and avoid this by specifying -->
					<%= form_for( @petsitter , :url => { controller: 'petsitters' , action: 'update_petsitter_experience_and_skills_details' } , html: { method: "patch"} ) do |f| %>

						<div class="form-group">
							<%= f.label :work_situation , "Work situation"  %>
							<%= f.select :work_situation , @all_work_situations , {}, class:"form-control"  %>
						</div>

						<div class="form-group">
							<%= f.label :no_of_yrs_caring , "Number of years caring for pets"  %>
							<%= f.number_field :no_of_yrs_caring , min: 0 , class:"form-control"  %>
						</div>

						<div class="form-group">
							<%= f.label :no_of_pets_owned , "Number of pets owned" %>
							<%= f.number_field :no_of_pets_owned , min: 0 , max: 20 , class:"form-control" %>
						</div>

						<!-- 1) firstly within this middle column, i create a row that spans the width of this column and in this row i create again 3 columns with same ratio 3:6:3 this is called nesting of columns within columns (a row even if it is nested within a column can have a maximum of 2 columns.) -->
						<!-- again we use spans because there are in line elements which means they don't have to start on new line of parent element but they can start anywhere and that is how we can have both Back and Continue buttons on same line -->

						<div class="row">

							<div class="col-md-6 col-sm-offset-3">
								<span style="float:right;">
									<%= f.button :submit, class:"btn btn-success" do %>
										Save and Continue <span class="glyphicon glyphicon-hand-right"></span> 
									<% end %>
								</span>
								<!-- we write out Next then &ensp; is a character that yields a wide space in html - it is a HTML special symbol, then we use greater than symbol(>) to show next  -->

								<span style="float:left;">
									<%= link_to  edit_petsitter_personal_details_path(@petsitter.id) ,  :method => :get ,class:"btn btn-success" do  %> 
										<span class="glyphicon glyphicon-hand-left"></span> Back 
									<% end %>
								</span> 

							</div>
						</div>
						
						
					<% end %>

				</div>
			</div>
			 

		</div>

		<div class="col-md-3">
			<!-- third column of our huge long row has nothing yet -->
		</div>


	</div>







</div>