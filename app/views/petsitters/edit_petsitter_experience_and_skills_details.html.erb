
<!-- all bootstrap elements should exist under/inside a class container -->

<div class="container">
	<!-- create first empty row in our grid/graph system of bootstrap -->
	<div class="row" style="height:50px;">

	</div>

	<!-- create 2nd row in our grid system to hold the step we are in -->
	<div class="row text-center">

		<div class="col-md-3">
		</div>


		<!-- ~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_ -->

		<div class="col-md-6 ">
			<!-- i want two circles one inside the other -->
			<!-- then in the area between the two circles i want to create a color so it appears like a border or FRAME for that matter just a circular frame  -->
			<!-- we will do this by a div within another div and make the edges of the div a bit smoother till they are circular by using border #00acc1 ;radius -->
			<!-- they both have to have square dimensions is why we choose 80 by 80 and 60 by 60 -->
			<!-- the padding 10px of outer div is as shown below in dig  -->
			<!-- __________________ -->
			<!-- | _____10_____   | -->
			<!-- |  |          |  | -->
			<!-- |10| 60       |10| -->
			<!-- |  |          |  | -->
			<!-- |  |_____60___|  | -->
			<!-- |______10________| -->
			<!-- the other 5px padding in the inner div is not as important because it just helps avoid having the text step # too close to the borders -->

			<!-- INLINE-BLOCK ELEMENTS ARE LIKE INLINE ELEMENTS BUT THEY CAN HAVE A WIDTH AND A HEIGHT. that is why we are having a dummy extreme outer div that has text-align center and the div which follows which is outer(the one with 80 by 80) is made an inline element using inline block and HENCE WE CAN HORIZONTALLY CENTER THE DIV OTHERWISE INGEKATAA -->
			
			<div style="text-align:center;">
				
				<div  class="text-center" style="display: inline-block;background-color:#bdbdbd ;width:80px ;height:80px ;padding: 10px 10px 10px 10px ;width:80px ;border-radius:50%; ">

					<div style="padding: 5px 5px 5px 5px ;width:60px ;height:60px ; text-align:center;background-color:white;vertical-align:middle;border-radius:50%; font-family: 'marydale' ;font-weight:bolder;font-size:19px;">

						Step 
						<br/>
						1

					</div>

				</div>

				<!-- i'll create many(3) circles like this for step 1 through to step 3 but then step 1's border is the only one coloured green the rest are colored grey to show that we are in step 1  -->
				<!-- the div that is just below this comment is for the line colored gray separating the two circles -->

				<div style="display: inline-block;width:25px;height:5px;background-color:#bdbdbd ;vertical-align:center;">

				</div>

				 <!-- ________________2nd step circle_____________________ -->	<div  class="text-center" style="display: inline-block;background-color:#bdbdbd;width:80px ;height:80px ;padding: 10px 10px 10px 10px ;width:80px ;border-radius:50%; ">

					<div style="padding: 5px 5px 5px 5px ;width:60px ;height:60px ; text-align:center;background-color:white;vertical-align:middle;border-radius:50%; font-family: 'marydale' ;font-weight:bolder;font-size:19px;">

						Step 
						<br/>
						2

					</div>

				</div>
				<!-- _____________________________________________________ -->

				<!-- ___________line separating circle steps________________ -->

				<div style="display: inline-block;width:25px;height:5px;background-color:#bdbdbd ;vertical-align:center;">

				</div>
				<!-- _______________________________________________________ -->

				<!-- ________________3rd step circle_______________________ -->
				<div  class="text-center" style="display: inline-block;background-color:#5cb85c ;width:80px ;height:80px ;padding: 10px 10px 10px 10px ;width:80px ;border-radius:50%; ">

					<div style="padding: 5px 5px 5px 5px ;width:60px ;height:60px ; text-align:center;background-color:white;vertical-align:middle;border-radius:50%; font-family: 'marydale' ;font-weight:bolder;font-size:19px;">

						Step 
						<br/>
						3

					</div>

				</div>
				<!-- ___________________________________________________ -->

				<!-- ___________line separating circle steps________________ -->

				<div style="display: inline-block;width:25px;height:5px;background-color:#bdbdbd ;vertical-align:center;">

				</div>
				<!-- _______________________________________________________ -->

				<!-- ________________4th step circle_______________________ -->
				<div  class="text-center" style="display: inline-block;background-color:#bdbdbd;width:80px ;height:80px ;padding: 10px 10px 10px 10px ;width:80px ;border-radius:50%; ">

					<div style="padding: 5px 5px 5px 5px ;width:60px ;height:60px ; text-align:center;background-color:white;vertical-align:middle;border-radius:50%; font-family: 'marydale' ;font-weight:bolder;font-size:19px;">

						Step 
						<br/>
						4

					</div>

				</div>
				<!-- ___________________________________________________ -->

				<!-- ___________line separating circle steps________________ -->

				<div style="display: inline-block;width:25px;height:5px;background-color:#bdbdbd ;vertical-align:center;">

				</div>
				<!-- _______________________________________________________ -->

				<!-- ________________5th step circle_______________________ -->
				<div  class="text-center" style="display: inline-block;background-color:#bdbdbd;width:80px ;height:80px ;padding: 10px 10px 10px 10px ;width:80px ;border-radius:50%; ">

					<div style="padding: 5px 5px 5px 5px ;width:60px ;height:60px ; text-align:center;background-color:white;vertical-align:middle;border-radius:50%; font-family: 'marydale' ;font-weight:bolder;font-size:19px;">

						Step 
						<br/>
						5

					</div>

				</div>
				<!-- ___________________________________________________ -->

				
			</div>



			<h4 class="text-center" style="font-family: 'marydale' ;font-weight:bolder;font-size:19px;margin-top:0px ;"> 
				<br/>
				Experience and skills
			</h4>

		</div>

		<!-- ~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_~_ -->

		<div class="col-md-3">
		</div>
		

		
	</div>





	<!-- 3 COLUMN LAYOUT -->
	<!-- Create one deep row that has 3 columns in a ratio 3:6:3/1:2:1 -->
	<div class="row">
		<div class="col-md-3">
			<!-- first column -->
		</div>

		<!-- main column with our form -->
		<div class="col-md-6">


			<div class="panel panel-default border_style">
  				<div class="panel-body">

					<!-- form_for rails helper requires an object to bind to, therefore we give it the empty object @petowner THEN which is of more importance, if we don't specify a url where the form data will be sent, Rails will see whether the record is new or being updated and come up with its own url. Therefore in this case we try and avoid this by specifying -->
					<%= form_for( @petsitter , :url => { controller: 'petsitters' , action: 'update_petsitter_experience_and_skills_details' } , html: { method: "patch"} ) do |f| %>

						
						<div class="form-group">
							<%= f.label :work_situation , "Work situation"  %>
							<%= f.select :work_situation , @all_work_situations , {}, class:"form-control"  %>
						</div>

						<div class="form-group">
							<%= f.label :no_of_yrs_caring , "Number of years caring for pets"  %>
							<%= f.number_field :no_of_yrs_caring , min: 0 , class:"form-control"  %>
						</div>

						<div class="form-group">
							<%= f.label :no_of_pets_owned , "Number of pets owned" %>
							<%= f.number_field :no_of_pets_owned , min: 0 , max: 20 , class:"form-control" %>
						</div>

						<div class="form-group">

							<%= label_tag "pet_services_you_can_offer" , "Pet Service(s) you can offer"  %>

							<table>
								<tr>

									<td>

										<div class="btn-group btn_for_pets_query" data-toggle="buttons" >
											<label class = "btn btn-primary btn_for_pets_query" >

												<!-- When grouping checkboxes and giving them each the same name, attach square brackets to the end of the name in order for server-side code to treat checked checkboxes as an array. -->
												 <input name="pet_services_you_can_offer[]" type="checkbox" autocomplete="off" value="<%= @sittingservices[0].id %>"> <%= @sittingservices[0].service_name %>

											</label>
										</div>

									</td>

									<td>

										<div class="btn-group btn_for_pets_query" data-toggle="buttons" >
											<label class = "btn btn-primary btn_for_pets_query" >
												<!-- When grouping checkboxes and giving them each the same name, attach square brackets to the end of the name in order for server-side code to treat checked checkboxes as an array. -->
												 <input name="pet_services_you_can_offer[]" type="checkbox" autocomplete="off" value="<%= @sittingservices[1].id %>"> <%= @sittingservices[1].service_name %>
											</label>
										</div>
									</td>

									<td>

										<div class="btn-group btn_for_pets_query" data-toggle="buttons" >
											<label class = "btn btn-primary btn_for_pets_query" >
												<!-- When grouping checkboxes and giving them each the same name, attach square brackets to the end of the name in order for server-side code to treat checked checkboxes as an array. -->
												 <input name="pet_services_you_can_offer[]" type="checkbox" autocomplete="off" value="<%= @sittingservices[2].id %>"> <%= @sittingservices[2].service_name %>
											</label>
										</div>
									</td>

								</tr>
							</table>

						</div>

						<div class="form-group">

							<%= label_tag "pets_you_can_care_for" , "Pet(s) that you can care for  " %>

							<table>

								<tr>

									<td colspan="50%">
										<div class="btn-group btn_for_pets_query" data-toggle="buttons" >
											<label class = "btn btn-primary btn_for_pets_query" >

												<!-- When grouping checkboxes and giving them each the same name, attach square brackets to the end of the name in order for server-side code to treat checked checkboxes as an array. -->

												<!-- THE STATEMENT HELPS WITH USABILITY -->
												<!-- class of glyphicon ok will be added to this span if input is clicked. Check out jquery stuff below   -->
												<span ></span>

												 <input name="pets_that_you_can_care_for[]" type="checkbox" autocomplete="off" value="<%= @allpettypesthatexist[0].id %>"> <%= @allpettypesthatexist[0].type_name %>

											</label>
										</div>

									</td>

									<td colspan="50%">

										<div class="btn-group btn_for_pets_query" data-toggle="buttons" >
											<label class = "btn btn-primary btn_for_pets_query" >

												<!-- When grouping checkboxes and giving them each the same name, attach square brackets to the end of the name in order for server-side code to treat checked checkboxes as an array. -->

												<!-- THE STATEMENT HELPS WITH USABILITY -->
												<!-- class of glyphicon ok will be added to this span if input is clicked. Check out jquery stuff below   -->
												<span ></span>

												 <input name="pets_that_you_can_care_for[]" type="checkbox" autocomplete="off" value="<%= @allpettypesthatexist[1].id %>"> <%= @allpettypesthatexist[1].type_name %>

											</label>
										</div>

									</td>

								</tr>

								<tr>
									<td colspan="33%">

										<div class="btn-group btn_for_pets_query" data-toggle="buttons" >
											<label class = "btn btn-primary btn_for_pets_query" >

												<!-- When grouping checkboxes and giving them each the same name, attach square brackets to the end of the name in order for server-side code to treat checked checkboxes as an array. -->

												<!-- THE STATEMENT HELPS WITH USABILITY -->
												<!-- class of glyphicon ok will be added to this span if input is clicked. Check out jquery stuff below   -->
												<span ></span>
												 <input name="pets_that_you_can_care_for[]" type="checkbox" autocomplete="off" value="<%= @allpettypesthatexist[2].id %>"> <%= @allpettypesthatexist[2].type_name %>

											</label>
										</div>

									</td>

									<td colspan="33%">

										<div class="btn-group btn_for_pets_query" data-toggle="buttons" >
											<label class = "btn btn-primary btn_for_pets_query" >

												<!-- When grouping checkboxes and giving them each the same name, attach square brackets to the end of the name in order for server-side code to treat checked checkboxes as an array. -->

												<!-- THE STATEMENT HELPS WITH USABILITY -->
												<!-- class of glyphicon ok will be added to this span if input is clicked. Check out jquery stuff below   -->
												<span ></span>
												 <input name="pets_that_you_can_care_for[]" type="checkbox" autocomplete="off" value="<%= @allpettypesthatexist[3].id %>"> <%= @allpettypesthatexist[3].type_name %>

											</label>
										</div>

									</td>

									<td colspan="33%">

										<div class="btn-group btn_for_pets_query" data-toggle="buttons" >
											<label class = "btn btn-primary btn_for_pets_query" >

												<!-- When grouping checkboxes and giving them each the same name, attach square brackets to the end of the name in order for server-side code to treat checked checkboxes as an array. -->

												<!-- THE STATEMENT HELPS WITH USABILITY -->
												<!-- class of glyphicon ok will be added to this span if input is clicked. Check out jquery stuff below   -->
												<span ></span>
												 <input name="pets_that_you_can_care_for[]" type="checkbox" autocomplete="off" value="<%= @allpettypesthatexist[4].id %>"> <%= @allpettypesthatexist[4].type_name %>

											</label>
										</div>

									</td>


								</tr>

							</table>
						</div>

						<!-- 1) firstly within this middle column, i create a row that spans the width of this column and in this row i create again 3 columns with same ratio 3:6:3 this is called nesting of columns within columns (a row even if it is nested within a column can have a maximum of 2 columns.) -->
						<!-- again we use spans because there are in line elements which means they don't have to start on new line of parent element but they can start anywhere and that is how we can have both Back and Continue buttons on same line -->

						<div class="row">

							<div class="col-md-7 col-sm-offset-3">
								<span style="float:right;">
									<%= f.button :submit, class:"btn btn-success" do %>
										Save and Continue <span class="glyphicon glyphicon-hand-right"></span> 
									<% end %>
								</span>
								<!-- we write out Next then &ensp; is a character that yields a wide space in html - it is a HTML special symbol, then we use greater than symbol(>) to show next  -->

								<span style="float:left;">
									<%= link_to  edit_petsitter_personal_details_path(@petsitter.id) ,  :method => :get ,class:"btn btn-success" do  %> 
										<span class="glyphicon glyphicon-hand-left"></span> Back 
									<% end %>
								</span> 

							</div>
						</div>
						
						
					<% end %>

				</div>
			</div>
			 

		</div>

		<div class="col-md-3">
			<!-- third column of our huge long row has nothing yet -->
		</div>


	</div>
</div>


<script type="text/javascript">

	$("[type=checkbox]").change( function() { 
		// the above statement is equal to $(":checkbox")  where :checkbox is a selector is a class offered by jquery
		// this line says go through the the DOM and find elements with an input type of checkbox and to them apply the change method

		// .prev() - Get the immediately preceding sibling of each element in the set of matched elements - this will be the span class

		$(this).prev().toggleClass("glyphicon glyphicon-ok") ;

	}) ;


</script>